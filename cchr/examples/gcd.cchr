#include <stdint.h>
#include <stdio.h>
#include <string.h>

#include "gcd_cchr.h"

cchr {
  constraint gcd(uint64_t) option(fmt,"gcd(%llu)",$1);

  triv @ gcd(0ULL)#passive <=> true;
  dec @ gcd(N) \ gcd(M) <=> M>=N | uint64_t V=M-N, /*{printf("[val=%i]\n",(int)V);},*/ gcd(V);
}

int main(int argc, char **argv) {
  uint64_t a1 = (uint64_t)(argc>1 ? strtoull(argv[1],NULL,0) : 100000000);
  uint64_t a2 = (uint64_t)(argc>2 ? strtoull(argv[2],NULL,0) : 5);
  cchr_runtime_init();
  cchr_add_gcd_1(a1);
  cchr_add_gcd_1(a2);
  printf("size=%u\n",(unsigned int)(sizeof(cchr_entry_t)));
  cchr_consloop(j,gcd_1,{printf("gcd(%llu,%llu)=%llu\n",(unsigned long long)a1,(unsigned long long)a2,(unsigned long long)cchr_consarg(j,gcd_1,1));});
  cchr_runtime_free();
  return 0;
}
