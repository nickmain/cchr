%!PS-Adobe-3.0 EPSF-3.0
%%Creator: xpdf/pdftops 3.01
%%LanguageLevel: 3
%%BoundingBox: 0 0 360 216
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.01 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add axialCol sc
    exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h
    dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h f*
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
/F29_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /.notdef/bullet/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/bullet/.notdef/bullet
  /bullet/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/bullet/.notdef/.notdef
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
0 0 360 216 re
W
q
[0.05 0 0 0.05 0 0] cm
1 J
1 j
10 w
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
1116 633 m
1176 633 l
6894 633 m
6834 633 l
S
[1 0 0 1 0 0] Tm
0 0 Td
505.7 587 Td
/F29_0 180 Tf
( 1e-07) 510.3 Tj
1116 748 m
1146 748 l
6894 748 m
6864 748 l
1116 900 m
1146 900 l
6894 900 m
6864 900 l
1116 978 m
1146 978 l
6894 978 m
6864 978 l
1116 1015 m
1176 1015 l
6894 1015 m
6834 1015 l
S
[1 0 0 1 0 0] Tm
0 0 Td
505.7 969 Td
/F29_0 180 Tf
( 1e-06) 510.3 Tj
1116 1130 m
1146 1130 l
6894 1130 m
6864 1130 l
1116 1282 m
1146 1282 l
6894 1282 m
6864 1282 l
1116 1360 m
1146 1360 l
6894 1360 m
6864 1360 l
1116 1397 m
1176 1397 l
6894 1397 m
6834 1397 l
S
[1 0 0 1 0 0] Tm
0 0 Td
505.7 1351 Td
/F29_0 180 Tf
( 1e-05) 510.3 Tj
1116 1511 m
1146 1511 l
6894 1511 m
6864 1511 l
1116 1663 m
1146 1663 l
6894 1663 m
6864 1663 l
1116 1741 m
1146 1741 l
6894 1741 m
6864 1741 l
1116 1778 m
1176 1778 l
6894 1778 m
6834 1778 l
S
[1 0 0 1 0 0] Tm
0 0 Td
505.7 1732 Td
/F29_0 180 Tf
( 1e-04) 510.3 Tj
1116 1893 m
1146 1893 l
6894 1893 m
6864 1893 l
1116 2045 m
1146 2045 l
6894 2045 m
6864 2045 l
1116 2123 m
1146 2123 l
6894 2123 m
6864 2123 l
1116 2160 m
1176 2160 l
6894 2160 m
6834 2160 l
S
[1 0 0 1 0 0] Tm
0 0 Td
515.6 2114 Td
/F29_0 180 Tf
( 0.001) 500.4 Tj
1116 2275 m
1146 2275 l
6894 2275 m
6864 2275 l
1116 2427 m
1146 2427 l
6894 2427 m
6864 2427 l
1116 2505 m
1146 2505 l
6894 2505 m
6864 2505 l
1116 2542 m
1176 2542 l
6894 2542 m
6834 2542 l
S
[1 0 0 1 0 0] Tm
0 0 Td
615.68 2496 Td
/F29_0 180 Tf
( 0.01) 400.32 Tj
1116 2657 m
1146 2657 l
6894 2657 m
6864 2657 l
1116 2809 m
1146 2809 l
6894 2809 m
6864 2809 l
1116 2887 m
1146 2887 l
6894 2887 m
6864 2887 l
1116 2924 m
1176 2924 l
6894 2924 m
6834 2924 l
S
[1 0 0 1 0 0] Tm
0 0 Td
715.76 2878 Td
/F29_0 180 Tf
( 0.1) 300.24 Tj
1116 3038 m
1146 3038 l
6894 3038 m
6864 3038 l
1116 3190 m
1146 3190 l
6894 3190 m
6864 3190 l
1116 3268 m
1146 3268 l
6894 3268 m
6864 3268 l
1116 3305 m
1176 3305 l
6894 3305 m
6834 3305 l
S
[1 0 0 1 0 0] Tm
0 0 Td
865.88 3259 Td
/F29_0 180 Tf
( 1) 150.12 Tj
1116 3420 m
1146 3420 l
6894 3420 m
6864 3420 l
1116 3572 m
1146 3572 l
6894 3572 m
6864 3572 l
1116 3650 m
1146 3650 l
6894 3650 m
6864 3650 l
1116 3687 m
1176 3687 l
6894 3687 m
6834 3687 l
S
[1 0 0 1 0 0] Tm
0 0 Td
765.8 3641 Td
/F29_0 180 Tf
( 10) 250.2 Tj
1116 633 m
1116 693 l
1116 3687 m
1116 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
1040.94 376 Td
/F29_0 180 Tf
( 1) 150.12 Tj
1406 633 m
1406 663 l
1406 3687 m
1406 3657 l
1789 633 m
1789 663 l
1789 3687 m
1789 3657 l
1986 633 m
1986 663 l
1986 3687 m
1986 3657 l
2079 633 m
2079 693 l
2079 3687 m
2079 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
1953.9 376 Td
/F29_0 180 Tf
( 10) 250.2 Tj
2369 633 m
2369 663 l
2369 3687 m
2369 3657 l
2752 633 m
2752 663 l
2752 3687 m
2752 3657 l
2949 633 m
2949 663 l
2949 3687 m
2949 3657 l
3042 633 m
3042 693 l
3042 3687 m
3042 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
2866.86 376 Td
/F29_0 180 Tf
( 100) 350.28 Tj
3332 633 m
3332 663 l
3332 3687 m
3332 3657 l
3715 633 m
3715 663 l
3715 3687 m
3715 3657 l
3912 633 m
3912 663 l
3912 3687 m
3912 3657 l
4005 633 m
4005 693 l
4005 3687 m
4005 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
3779.82 376 Td
/F29_0 180 Tf
( 1000) 450.36 Tj
4295 633 m
4295 663 l
4295 3687 m
4295 3657 l
4678 633 m
4678 663 l
4678 3687 m
4678 3657 l
4875 633 m
4875 663 l
4875 3687 m
4875 3657 l
4968 633 m
4968 693 l
4968 3687 m
4968 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
4692.78 376 Td
/F29_0 180 Tf
( 10000) 550.44 Tj
5258 633 m
5258 663 l
5258 3687 m
5258 3657 l
5641 633 m
5641 663 l
5641 3687 m
5641 3657 l
5838 633 m
5838 663 l
5838 3687 m
5838 3657 l
5931 633 m
5931 693 l
5931 3687 m
5931 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
5605.74 376 Td
/F29_0 180 Tf
( 100000) 650.52 Tj
6221 633 m
6221 663 l
6221 3687 m
6221 3657 l
6604 633 m
6604 663 l
6604 3687 m
6604 3657 l
6801 633 m
6801 663 l
6801 3687 m
6801 3657 l
6894 633 m
6894 693 l
6894 3687 m
6894 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
6616.26 376 Td
/F29_0 180 Tf
( 1e+06) 555.48 Tj
1116 633 5778 3054 re
S
q
[1 0 0 1 210 2160] cm
[0 1 -1 0 0 0] cm
[1 0 0 1 0 -46] cm
[1 0 0 1 0 0] Tm
0 0 Td
-170.01 0 Td
/F29_0 180 Tf
(time) 340.02 Tj
Q
[1 0 0 1 0 0] Tm
0 0 Td
3494.88 60 Td
/F29_0 180 Tf
(problem size) 1020.24 Tj
3254.85 3958 Td
(Benchmark primes) 1500.3 Tj
/DeviceRGB {} CS
[1 0 0] SC
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
5844.02 1386 Td
(jchr) 289.98 Tj
/DeviceRGB {} CS
[1 0 0] SC
/DeviceRGB {} cs
[1 0 0] sc
6234 1432 m
6694 1432 l
2325 1885 m
2369 1983 l
2409 1967 l
2445 2011 l
2494 2036 l
2538 2110 l
2578 2098 l
2615 2120 l
2659 2123 l
2699 2159 l
2735 2193 l
2776 2246 l
2814 2262 l
2855 2288 l
2893 2326 l
2933 2345 l
2969 2385 l
3007 2401 l
3046 2431 l
3086 2463 l
3122 2555 l
3158 2631 l
3195 2665 l
3231 2693 l
3269 2705 l
3306 2724 l
3342 2736 l
3379 2757 l
3417 2777 l
3454 2800 l
3492 2820 l
3528 2841 l
3565 2867 l
3601 2899 l
3638 2914 l
3675 2925 l
3711 2945 l
3747 2960 l
3784 2972 l
3820 2988 l
3856 3008 l
3893 3019 l
3929 3022 l
3966 3029 l
4002 3027 l
4038 3028 l
4074 3043 l
4111 3047 l
4147 3054 l
4183 3058 l
4219 3072 l
4255 3076 l
4291 3090 l
4327 3102 l
4364 3116 l
4400 3130 l
4436 3147 l
4472 3159 l
4508 3182 l
4544 3197 l
4580 3223 l
4616 3247 l
4652 3274 l
4689 3313 l
4725 3358 l
4761 3405 l
4797 3457 l
4833 3494 l
4869 3533 l
4905 3577 l
S
/DeviceRGB {} CS
[0 0.752899 0] SC
/DeviceRGB {} cs
[0 0.752899 0] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
5874.08 1175 Td
/F29_0 180 Tf
(swi) 259.92 Tj
/DeviceRGB {} CS
[0 0.752899 0] SC
/DeviceRGB {} cs
[0 0.752899 0] sc
6234 1221 m
6694 1221 l
2155 1938 m
2220 1839 l
2276 1883 l
2325 2041 l
2369 1997 l
2409 2000 l
2445 1850 l
2494 2095 l
2538 1925 l
2578 2055 l
2615 2120 l
2659 2107 l
2699 2107 l
2735 2129 l
2776 2103 l
2814 2207 l
2855 2159 l
2893 2193 l
2933 2252 l
2969 2225 l
3007 2260 l
3046 2275 l
3086 2325 l
3122 2340 l
3158 2348 l
3195 2365 l
3231 2401 l
3269 2416 l
3306 2446 l
3342 2452 l
3379 2484 l
3417 2510 l
3454 2514 l
3492 2555 l
3528 2582 l
3565 2613 l
3601 2642 l
3638 2663 l
3675 2693 l
3711 2716 l
3747 2742 l
3784 2766 l
3820 2793 l
3856 2821 l
3893 2847 l
3929 2873 l
3966 2900 l
4002 2925 l
4038 2953 l
4074 2978 l
4111 3005 l
4147 3030 l
4183 3057 l
4219 3084 l
4255 3110 l
4291 3134 l
4327 3162 l
4364 3189 l
4400 3215 l
4436 3242 l
4472 3268 l
4508 3294 l
4544 3321 l
4580 3347 l
4616 3374 l
4652 3400 l
4689 3425 l
4725 3454 l
4761 3478 l
4797 3506 l
4833 3533 l
4869 3559 l
S
/DeviceRGB {} CS
[0 0.501999 1] SC
/DeviceRGB {} cs
[0 0.501999 1] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
5793.98 964 Td
/F29_0 180 Tf
(cchr) 340.02 Tj
/DeviceRGB {} CS
[0 0.501999 1] SC
/DeviceRGB {} cs
[0 0.501999 1] sc
6234 1010 m
6694 1010 l
1930 1198 m
1986 1112 l
2035 1164 l
2079 1230 l
2119 1171 l
2155 1212 l
2220 1324 l
2276 926 l
2325 1330 l
2369 1281 l
2409 1305 l
2445 1289 l
2494 1223 l
2538 1301 l
2578 1275 l
2615 1325 l
2659 1396 l
2699 1376 l
2735 1438 l
2776 1466 l
2814 1502 l
2855 1498 l
2893 1541 l
2933 1589 l
2969 1596 l
3007 1614 l
3046 1643 l
3086 1661 l
3122 1710 l
3158 1710 l
3195 1733 l
3231 1756 l
3269 1780 l
3306 1799 l
3342 1824 l
3379 1849 l
3417 1884 l
3454 1895 l
3492 1944 l
3528 1965 l
3565 1986 l
3601 2011 l
3638 2032 l
3675 2058 l
3711 2085 l
3747 2112 l
3784 2138 l
3820 2164 l
3856 2191 l
3893 2218 l
3929 2243 l
3966 2268 l
4002 2294 l
4038 2320 l
4074 2346 l
4111 2373 l
4147 2397 l
4183 2425 l
4219 2451 l
4255 2477 l
4291 2503 l
4327 2530 l
4364 2556 l
4400 2582 l
4436 2609 l
4472 2635 l
4508 2661 l
4544 2688 l
4580 2715 l
4616 2741 l
4652 2768 l
4689 2794 l
4725 2821 l
4761 2847 l
4797 2874 l
4833 2901 l
4869 2927 l
4905 2954 l
4941 2981 l
4977 3008 l
5013 3034 l
5049 3061 l
5085 3088 l
5121 3114 l
5158 3141 l
5194 3168 l
5230 3195 l
5266 3222 l
5302 3249 l
5338 3276 l
5374 3303 l
5410 3330 l
5446 3356 l
5482 3384 l
5518 3411 l
5554 3439 l
5590 3467 l
5626 3495 l
5662 3523 l
5698 3552 l
5734 3580 l
S
/DeviceRGB {} CS
[0.752899 0 1] SC
/DeviceRGB {} cs
[0.752899 0 1] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
6044 753 Td
/F29_0 180 Tf
(c) 90 Tj
/DeviceRGB {} CS
[0.752899 0 1] SC
/DeviceRGB {} cs
[0.752899 0 1] sc
6234 799 m
6694 799 l
2079 1328 m
2119 1279 l
2155 1277 l
2220 1272 l
2276 1289 l
2325 1310 l
2369 1273 l
2409 1318 l
2445 1321 l
2494 1275 l
2538 1230 l
2578 1278 l
2615 1341 l
2659 1263 l
2699 1412 l
2735 1250 l
2776 1299 l
2814 1364 l
2855 1442 l
2893 1458 l
2933 1333 l
2969 1422 l
3007 1440 l
3046 1438 l
3086 1445 l
3122 1480 l
3158 1513 l
3195 1527 l
3231 1509 l
3269 1557 l
3306 1560 l
3342 1611 l
3379 1604 l
3417 1616 l
3454 1658 l
3492 1658 l
3528 1688 l
3565 1694 l
3601 1736 l
3638 1740 l
3675 1772 l
3711 1799 l
3747 1810 l
3784 1847 l
3820 1871 l
3856 1890 l
3893 1909 l
3929 1933 l
3966 1950 l
4002 1968 l
4038 1993 l
4074 2019 l
4111 2040 l
4147 2060 l
4183 2090 l
4219 2119 l
4255 2135 l
4291 2157 l
4327 2186 l
4364 2206 l
4400 2229 l
4436 2256 l
4472 2279 l
4508 2301 l
4544 2327 l
4580 2352 l
4616 2376 l
4652 2399 l
4689 2424 l
4725 2448 l
4761 2472 l
4797 2497 l
4833 2522 l
4869 2547 l
4905 2570 l
4941 2596 l
4977 2622 l
5013 2645 l
5049 2670 l
5085 2696 l
5121 2720 l
5158 2746 l
5194 2771 l
5230 2796 l
5266 2821 l
5302 2847 l
5338 2873 l
5374 2897 l
5410 2923 l
5446 2948 l
5482 2973 l
5518 2999 l
5554 3024 l
5590 3050 l
5626 3075 l
5662 3101 l
5698 3127 l
5734 3152 l
5770 3178 l
5806 3203 l
5842 3229 l
5878 3254 l
5914 3281 l
5951 3306 l
5987 3332 l
6023 3358 l
6059 3383 l
6095 3409 l
6131 3435 l
6167 3461 l
6203 3487 l
6239 3513 l
6275 3539 l
6311 3565 l
S
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
1116 633 5778 3054 re
S
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
