%!PS-Adobe-3.0 EPSF-3.0
%%Creator: xpdf/pdftops 3.01
%%LanguageLevel: 3
%%BoundingBox: 0 0 360 216
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.01 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add axialCol sc
    exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h
    dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h f*
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
/F29_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /.notdef/bullet/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/bullet/.notdef/bullet
  /bullet/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/bullet/.notdef/.notdef
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
0 0 360 216 re
W
q
[0.05 0 0 0.05 0 0] cm
1 J
1 j
10 w
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
1116 633 m
1176 633 l
6894 633 m
6834 633 l
S
[1 0 0 1 0 0] Tm
0 0 Td
505.7 587 Td
/F29_0 180 Tf
( 1e-06) 510.3 Tj
1116 764 m
1146 764 l
6894 764 m
6864 764 l
1116 938 m
1146 938 l
6894 938 m
6864 938 l
1116 1027 m
1146 1027 l
6894 1027 m
6864 1027 l
1116 1069 m
1176 1069 l
6894 1069 m
6834 1069 l
S
[1 0 0 1 0 0] Tm
0 0 Td
505.7 1023 Td
/F29_0 180 Tf
( 1e-05) 510.3 Tj
1116 1201 m
1146 1201 l
6894 1201 m
6864 1201 l
1116 1374 m
1146 1374 l
6894 1374 m
6864 1374 l
1116 1463 m
1146 1463 l
6894 1463 m
6864 1463 l
1116 1506 m
1176 1506 l
6894 1506 m
6834 1506 l
S
[1 0 0 1 0 0] Tm
0 0 Td
505.7 1460 Td
/F29_0 180 Tf
( 1e-04) 510.3 Tj
1116 1637 m
1146 1637 l
6894 1637 m
6864 1637 l
1116 1811 m
1146 1811 l
6894 1811 m
6864 1811 l
1116 1900 m
1146 1900 l
6894 1900 m
6864 1900 l
1116 1942 m
1176 1942 l
6894 1942 m
6834 1942 l
S
[1 0 0 1 0 0] Tm
0 0 Td
515.6 1896 Td
/F29_0 180 Tf
( 0.001) 500.4 Tj
1116 2073 m
1146 2073 l
6894 2073 m
6864 2073 l
1116 2247 m
1146 2247 l
6894 2247 m
6864 2247 l
1116 2336 m
1146 2336 l
6894 2336 m
6864 2336 l
1116 2378 m
1176 2378 l
6894 2378 m
6834 2378 l
S
[1 0 0 1 0 0] Tm
0 0 Td
615.68 2332 Td
/F29_0 180 Tf
( 0.01) 400.32 Tj
1116 2509 m
1146 2509 l
6894 2509 m
6864 2509 l
1116 2683 m
1146 2683 l
6894 2683 m
6864 2683 l
1116 2772 m
1146 2772 l
6894 2772 m
6864 2772 l
1116 2814 m
1176 2814 l
6894 2814 m
6834 2814 l
S
[1 0 0 1 0 0] Tm
0 0 Td
715.76 2768 Td
/F29_0 180 Tf
( 0.1) 300.24 Tj
1116 2946 m
1146 2946 l
6894 2946 m
6864 2946 l
1116 3119 m
1146 3119 l
6894 3119 m
6864 3119 l
1116 3208 m
1146 3208 l
6894 3208 m
6864 3208 l
1116 3251 m
1176 3251 l
6894 3251 m
6834 3251 l
S
[1 0 0 1 0 0] Tm
0 0 Td
865.88 3205 Td
/F29_0 180 Tf
( 1) 150.12 Tj
1116 3382 m
1146 3382 l
6894 3382 m
6864 3382 l
1116 3556 m
1146 3556 l
6894 3556 m
6864 3556 l
1116 3645 m
1146 3645 l
6894 3645 m
6864 3645 l
1116 3687 m
1176 3687 l
6894 3687 m
6834 3687 l
S
[1 0 0 1 0 0] Tm
0 0 Td
765.8 3641 Td
/F29_0 180 Tf
( 10) 250.2 Tj
1116 633 m
1116 693 l
1116 3687 m
1116 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
1040.94 376 Td
/F29_0 180 Tf
( 1) 150.12 Tj
1309 633 m
1309 663 l
1309 3687 m
1309 3657 l
1565 633 m
1565 663 l
1565 3687 m
1565 3657 l
1696 633 m
1696 663 l
1696 3687 m
1696 3657 l
1758 633 m
1758 693 l
1758 3687 m
1758 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
1632.9 376 Td
/F29_0 180 Tf
( 10) 250.2 Tj
1951 633 m
1951 663 l
1951 3687 m
1951 3657 l
2207 633 m
2207 663 l
2207 3687 m
2207 3657 l
2338 633 m
2338 663 l
2338 3687 m
2338 3657 l
2400 633 m
2400 693 l
2400 3687 m
2400 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
2224.86 376 Td
/F29_0 180 Tf
( 100) 350.28 Tj
2593 633 m
2593 663 l
2593 3687 m
2593 3657 l
2849 633 m
2849 663 l
2849 3687 m
2849 3657 l
2980 633 m
2980 663 l
2980 3687 m
2980 3657 l
3042 633 m
3042 693 l
3042 3687 m
3042 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
2816.82 376 Td
/F29_0 180 Tf
( 1000) 450.36 Tj
3235 633 m
3235 663 l
3235 3687 m
3235 3657 l
3491 633 m
3491 663 l
3491 3687 m
3491 3657 l
3622 633 m
3622 663 l
3622 3687 m
3622 3657 l
3684 633 m
3684 693 l
3684 3687 m
3684 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
3408.78 376 Td
/F29_0 180 Tf
( 10000) 550.44 Tj
3877 633 m
3877 663 l
3877 3687 m
3877 3657 l
4133 633 m
4133 663 l
4133 3687 m
4133 3657 l
4264 633 m
4264 663 l
4264 3687 m
4264 3657 l
4326 633 m
4326 693 l
4326 3687 m
4326 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
4000.74 376 Td
/F29_0 180 Tf
( 100000) 650.52 Tj
4519 633 m
4519 663 l
4519 3687 m
4519 3657 l
4775 633 m
4775 663 l
4775 3687 m
4775 3657 l
4906 633 m
4906 663 l
4906 3687 m
4906 3657 l
4968 633 m
4968 693 l
4968 3687 m
4968 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
4690.26 376 Td
/F29_0 180 Tf
( 1e+06) 555.48 Tj
5161 633 m
5161 663 l
5161 3687 m
5161 3657 l
5417 633 m
5417 663 l
5417 3687 m
5417 3657 l
5548 633 m
5548 663 l
5548 3687 m
5548 3657 l
5610 633 m
5610 693 l
5610 3687 m
5610 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
5332.26 376 Td
/F29_0 180 Tf
( 1e+07) 555.48 Tj
5803 633 m
5803 663 l
5803 3687 m
5803 3657 l
6059 633 m
6059 663 l
6059 3687 m
6059 3657 l
6190 633 m
6190 663 l
6190 3687 m
6190 3657 l
6252 633 m
6252 693 l
6252 3687 m
6252 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
5974.26 376 Td
/F29_0 180 Tf
( 1e+08) 555.48 Tj
6445 633 m
6445 663 l
6445 3687 m
6445 3657 l
6701 633 m
6701 663 l
6701 3687 m
6701 3657 l
6832 633 m
6832 663 l
6832 3687 m
6832 3657 l
6894 633 m
6894 693 l
6894 3687 m
6894 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
6616.26 376 Td
/F29_0 180 Tf
( 1e+09) 555.48 Tj
1116 633 5778 3054 re
S
q
[1 0 0 1 210 2160] cm
[0 1 -1 0 0 0] cm
[1 0 0 1 0 -46] cm
[1 0 0 1 0 0] Tm
0 0 Td
-170.01 0 Td
/F29_0 180 Tf
(time) 340.02 Tj
Q
[1 0 0 1 0 0] Tm
0 0 Td
3494.88 60 Td
/F29_0 180 Tf
(problem size) 1020.24 Tj
3369.87 3958 Td
(Benchmark ram) 1270.26 Tj
/DeviceRGB {} CS
[1 0 0] SC
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
5844.02 1386 Td
(jchr) 289.98 Tj
/DeviceRGB {} CS
[1 0 0] SC
/DeviceRGB {} cs
[1 0 0] sc
6234 1432 m
6694 1432 l
1309 1865 m
1422 1882 l
1503 1894 l
1565 1941 l
1616 2034 l
1659 2023 l
1696 2038 l
1729 2062 l
1758 2097 l
1785 2121 l
1809 2126 l
1852 2193 l
1889 2219 l
1922 2231 l
1951 2253 l
1978 2276 l
2002 2230 l
2035 2260 l
2064 2257 l
2091 2300 l
2115 2328 l
2145 2355 l
2171 2371 l
2195 2398 l
2223 2414 l
2248 2436 l
2276 2483 l
2301 2498 l
2327 2504 l
2351 2562 l
2377 2585 l
2403 2607 l
2429 2614 l
2453 2644 l
2477 2670 l
2502 2669 l
2526 2681 l
2551 2835 l
2576 2850 l
2600 2865 l
2625 2863 l
2650 2899 l
2675 2923 l
2700 2927 l
2724 2921 l
2748 2949 l
2773 3015 l
2797 3013 l
2822 3029 l
2846 3042 l
2870 3044 l
2894 3050 l
2919 3092 l
2943 3087 l
2967 3131 l
2991 3143 l
3016 3150 l
3040 3151 l
3064 3159 l
3088 3153 l
3112 3159 l
3136 3162 l
3161 3159 l
3185 3167 l
3209 3176 l
3233 3187 l
3257 3201 l
3281 3196 l
3297 3198 l
S
/DeviceRGB {} CS
[0 0.752899 0] SC
/DeviceRGB {} cs
[0 0.752899 0] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
5874.08 1175 Td
/F29_0 180 Tf
(swi) 259.92 Tj
/DeviceRGB {} CS
[0 0.752899 0] SC
/DeviceRGB {} cs
[0 0.752899 0] sc
6234 1221 m
6694 1221 l
1309 2049 m
1422 1849 l
1503 1749 l
1565 1836 l
1616 2137 l
1659 1985 l
1696 2129 l
1729 2180 l
1758 1973 l
1785 2049 l
1809 1947 l
1852 1993 l
1889 2132 l
1922 2219 l
1951 2343 l
1978 2199 l
2002 2014 l
2035 2300 l
2064 2237 l
2091 2291 l
2115 2048 l
2145 2300 l
2171 2406 l
2195 2402 l
2223 2409 l
2248 2399 l
2276 2493 l
2301 2462 l
2327 2404 l
2351 2491 l
2377 2432 l
2403 2514 l
2429 2536 l
2453 2541 l
2477 2568 l
2502 2589 l
2526 2624 l
2551 2663 l
2576 2640 l
2600 2647 l
2625 2670 l
2650 2675 l
2675 2721 l
2700 2755 l
2724 2753 l
2748 2783 l
2773 2775 l
2797 2792 l
2822 2806 l
2846 2826 l
2870 2848 l
2894 2863 l
2919 2876 l
2943 2898 l
2967 2919 l
2991 2934 l
3016 2946 l
3040 2962 l
3064 2984 l
3088 2999 l
3112 3014 l
3136 3030 l
3161 3046 l
3185 3061 l
3209 3083 l
3233 3099 l
3257 3117 l
3281 3132 l
3305 3148 l
3329 3169 l
3353 3180 l
3377 3202 l
3401 3218 l
3426 3233 l
3450 3248 l
3474 3265 l
3498 3282 l
3522 3297 l
3546 3315 l
3570 3331 l
3594 3349 l
3618 3363 l
3642 3382 l
3666 3398 l
3690 3415 l
3714 3431 l
3738 3448 l
3762 3462 l
3786 3480 l
3810 3497 l
3834 3513 l
3858 3531 l
3882 3546 l
S
/DeviceRGB {} CS
[0 0.501999 1] SC
/DeviceRGB {} cs
[0 0.501999 1] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
5793.98 964 Td
/F29_0 180 Tf
(cchr) 340.02 Tj
/DeviceRGB {} CS
[0 0.501999 1] SC
/DeviceRGB {} cs
[0 0.501999 1] sc
6234 1010 m
6694 1010 l
1309 1053 m
1422 1108 l
1503 1171 l
1565 1258 l
1616 1273 l
1659 1342 l
1696 1359 l
1729 1380 l
1758 1400 l
1785 1403 l
1809 1454 l
1852 1465 l
1889 1524 l
1922 1525 l
1951 1550 l
1978 1574 l
2002 1596 l
2035 1601 l
2064 1627 l
2091 1643 l
2115 1660 l
2145 1683 l
2171 1694 l
2195 1706 l
2223 1738 l
2248 1750 l
2276 1765 l
2301 1778 l
2327 1798 l
2351 1817 l
2377 1835 l
2403 1854 l
2429 1868 l
2453 1886 l
2477 1900 l
2502 1918 l
2526 1934 l
2551 1953 l
2576 1966 l
2600 1981 l
2625 2001 l
2650 2018 l
2675 2031 l
2700 2049 l
2724 2063 l
2748 2081 l
2773 2098 l
2797 2113 l
2822 2130 l
2846 2147 l
2870 2163 l
2894 2179 l
2919 2196 l
2943 2212 l
2967 2229 l
2991 2246 l
3016 2260 l
3040 2278 l
3064 2293 l
3088 2310 l
3112 2328 l
3136 2342 l
3161 2358 l
3185 2374 l
3209 2390 l
3233 2407 l
3257 2422 l
3281 2439 l
3305 2456 l
3329 2472 l
3353 2488 l
3377 2504 l
3401 2520 l
3426 2536 l
3450 2552 l
3461 2547 l
S
/DeviceRGB {} CS
[0.752899 0 1] SC
/DeviceRGB {} cs
[0.752899 0 1] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
6044 753 Td
/F29_0 180 Tf
(c) 90 Tj
/DeviceRGB {} CS
[0.752899 0 1] SC
/DeviceRGB {} cs
[0.752899 0 1] sc
6234 799 m
6694 799 l
2351 977 m
2377 1028 l
2403 1016 l
2429 1070 l
2453 1108 l
2477 1123 l
2502 1102 l
2526 1082 l
2551 1068 l
2576 1067 l
2600 1146 l
2625 1136 l
2650 1173 l
2675 1121 l
2700 1160 l
2724 1185 l
2748 1170 l
2773 1217 l
2797 1207 l
2822 1226 l
2846 1223 l
2870 1275 l
2894 1280 l
2919 1265 l
2943 1321 l
2967 1319 l
2991 1331 l
3016 1325 l
3040 1357 l
3064 1378 l
3088 1403 l
3112 1437 l
3136 1407 l
3161 1424 l
3185 1453 l
3209 1466 l
3233 1498 l
3257 1503 l
3281 1526 l
3305 1518 l
3329 1541 l
3353 1567 l
3377 1589 l
3401 1596 l
3426 1616 l
3450 1631 l
3474 1646 l
3498 1659 l
3522 1670 l
3546 1686 l
3570 1701 l
3594 1726 l
3618 1747 l
3642 1762 l
3666 1773 l
3690 1786 l
3714 1803 l
3738 1815 l
3762 1833 l
3786 1854 l
3810 1866 l
3834 1884 l
3858 1899 l
3882 1916 l
3906 1931 l
3931 1948 l
3955 1964 l
3979 1980 l
4003 1997 l
4027 2014 l
4051 2029 l
4075 2045 l
4099 2061 l
4123 2078 l
4147 2094 l
4171 2110 l
4195 2126 l
4219 2142 l
4243 2158 l
4267 2175 l
4291 2191 l
4315 2208 l
4339 2224 l
4363 2241 l
4387 2256 l
4411 2272 l
4435 2289 l
4459 2305 l
4483 2322 l
4507 2337 l
4531 2354 l
4555 2371 l
4579 2387 l
4603 2403 l
4627 2419 l
4651 2436 l
4675 2452 l
4699 2468 l
4723 2485 l
4748 2501 l
4772 2517 l
4796 2534 l
4820 2550 l
4844 2566 l
4868 2583 l
4892 2599 l
4916 2615 l
4940 2632 l
4964 2648 l
4988 2664 l
5012 2680 l
5036 2697 l
5060 2713 l
5084 2730 l
5108 2746 l
5132 2762 l
5156 2779 l
5180 2795 l
5204 2811 l
5228 2828 l
5252 2844 l
5276 2860 l
5300 2876 l
5324 2893 l
5348 2909 l
5372 2925 l
5396 2942 l
5420 2958 l
5444 2974 l
5468 2991 l
5492 3007 l
5516 3023 l
5540 3040 l
5564 3056 l
5588 3072 l
5613 3089 l
5637 3105 l
5661 3121 l
5685 3138 l
5709 3154 l
5733 3170 l
5757 3187 l
5781 3203 l
5805 3219 l
5829 3236 l
5853 3252 l
5877 3268 l
5901 3285 l
5925 3301 l
5949 3317 l
5973 3334 l
5997 3350 l
6021 3366 l
6045 3383 l
6069 3399 l
6093 3415 l
6117 3432 l
6141 3448 l
6165 3464 l
6189 3481 l
6213 3497 l
6237 3513 l
6261 3530 l
6285 3546 l
S
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
1116 633 5778 3054 re
S
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
