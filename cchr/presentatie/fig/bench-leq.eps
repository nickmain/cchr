%!PS-Adobe-3.0 EPSF-3.0
%%Creator: xpdf/pdftops 3.01
%%LanguageLevel: 3
%%BoundingBox: 0 0 360 216
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.01 0
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16L3 {
  1 index /CIDFont resourcestatus {
    pop pop 1 index /CIDFont findresource /CIDFontType known
  } {
    false
  } ifelse
  {
    0 eq { /Identity-H } { /Identity-V } ifelse
    exch 1 array astore composefont pop
  } {
    pdfMakeFont16
  } ifelse
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add axialCol sc
    exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h
    dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
    0 360 arc h f*
  } ifelse
} def
end
%%EndResource
/CIDInit /ProcSet findresource begin
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-H def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
10 dict begin
  begincmap
  /CMapType 1 def
  /CMapName /Identity-V def
  /CIDSystemInfo 3 dict dup begin
    /Registry (Adobe) def
    /Ordering (Identity) def
    /Supplement 0 def
  end def
  /WMode 1 def
  1 begincodespacerange
    <0000> <ffff>
  endcodespacerange
  0 usefont
  1 begincidrange
    <0000> <ffff> 0
  endcidrange
  endcmap
  currentdict CMapName exch /CMap defineresource pop
end
end
%%EndProlog
%%BeginSetup
xpdf begin
/F29_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /.notdef/bullet/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/bullet/.notdef/bullet
  /bullet/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/bullet/.notdef/.notdef
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
0 0 360 216 re
W
q
[0.05 0 0 0.05 0 0] cm
1 J
1 j
10 w
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
1116 633 m
1176 633 l
6894 633 m
6834 633 l
S
[1 0 0 1 0 0] Tm
0 0 Td
505.7 587 Td
/F29_0 180 Tf
( 1e-06) 510.3 Tj
1116 764 m
1146 764 l
6894 764 m
6864 764 l
1116 938 m
1146 938 l
6894 938 m
6864 938 l
1116 1027 m
1146 1027 l
6894 1027 m
6864 1027 l
1116 1069 m
1176 1069 l
6894 1069 m
6834 1069 l
S
[1 0 0 1 0 0] Tm
0 0 Td
505.7 1023 Td
/F29_0 180 Tf
( 1e-05) 510.3 Tj
1116 1201 m
1146 1201 l
6894 1201 m
6864 1201 l
1116 1374 m
1146 1374 l
6894 1374 m
6864 1374 l
1116 1463 m
1146 1463 l
6894 1463 m
6864 1463 l
1116 1506 m
1176 1506 l
6894 1506 m
6834 1506 l
S
[1 0 0 1 0 0] Tm
0 0 Td
505.7 1460 Td
/F29_0 180 Tf
( 1e-04) 510.3 Tj
1116 1637 m
1146 1637 l
6894 1637 m
6864 1637 l
1116 1811 m
1146 1811 l
6894 1811 m
6864 1811 l
1116 1900 m
1146 1900 l
6894 1900 m
6864 1900 l
1116 1942 m
1176 1942 l
6894 1942 m
6834 1942 l
S
[1 0 0 1 0 0] Tm
0 0 Td
515.6 1896 Td
/F29_0 180 Tf
( 0.001) 500.4 Tj
1116 2073 m
1146 2073 l
6894 2073 m
6864 2073 l
1116 2247 m
1146 2247 l
6894 2247 m
6864 2247 l
1116 2336 m
1146 2336 l
6894 2336 m
6864 2336 l
1116 2378 m
1176 2378 l
6894 2378 m
6834 2378 l
S
[1 0 0 1 0 0] Tm
0 0 Td
615.68 2332 Td
/F29_0 180 Tf
( 0.01) 400.32 Tj
1116 2509 m
1146 2509 l
6894 2509 m
6864 2509 l
1116 2683 m
1146 2683 l
6894 2683 m
6864 2683 l
1116 2772 m
1146 2772 l
6894 2772 m
6864 2772 l
1116 2814 m
1176 2814 l
6894 2814 m
6834 2814 l
S
[1 0 0 1 0 0] Tm
0 0 Td
715.76 2768 Td
/F29_0 180 Tf
( 0.1) 300.24 Tj
1116 2946 m
1146 2946 l
6894 2946 m
6864 2946 l
1116 3119 m
1146 3119 l
6894 3119 m
6864 3119 l
1116 3208 m
1146 3208 l
6894 3208 m
6864 3208 l
1116 3251 m
1176 3251 l
6894 3251 m
6834 3251 l
S
[1 0 0 1 0 0] Tm
0 0 Td
865.88 3205 Td
/F29_0 180 Tf
( 1) 150.12 Tj
1116 3382 m
1146 3382 l
6894 3382 m
6864 3382 l
1116 3556 m
1146 3556 l
6894 3556 m
6864 3556 l
1116 3645 m
1146 3645 l
6894 3645 m
6864 3645 l
1116 3687 m
1176 3687 l
6894 3687 m
6834 3687 l
S
[1 0 0 1 0 0] Tm
0 0 Td
765.8 3641 Td
/F29_0 180 Tf
( 10) 250.2 Tj
1116 633 m
1116 693 l
1116 3687 m
1116 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
1040.94 376 Td
/F29_0 180 Tf
( 1) 150.12 Tj
1696 633 m
1696 663 l
1696 3687 m
1696 3657 l
2035 633 m
2035 663 l
2035 3687 m
2035 3657 l
2276 633 m
2276 663 l
2276 3687 m
2276 3657 l
2462 633 m
2462 663 l
2462 3687 m
2462 3657 l
2615 633 m
2615 663 l
2615 3687 m
2615 3657 l
2744 633 m
2744 663 l
2744 3687 m
2744 3657 l
2855 633 m
2855 663 l
2855 3687 m
2855 3657 l
2954 633 m
2954 663 l
2954 3687 m
2954 3657 l
3042 633 m
3042 693 l
3042 3687 m
3042 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
2916.9 376 Td
/F29_0 180 Tf
( 10) 250.2 Tj
3622 633 m
3622 663 l
3622 3687 m
3622 3657 l
3961 633 m
3961 663 l
3961 3687 m
3961 3657 l
4202 633 m
4202 663 l
4202 3687 m
4202 3657 l
4388 633 m
4388 663 l
4388 3687 m
4388 3657 l
4541 633 m
4541 663 l
4541 3687 m
4541 3657 l
4670 633 m
4670 663 l
4670 3687 m
4670 3657 l
4781 633 m
4781 663 l
4781 3687 m
4781 3657 l
4880 633 m
4880 663 l
4880 3687 m
4880 3657 l
4968 633 m
4968 693 l
4968 3687 m
4968 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
4792.86 376 Td
/F29_0 180 Tf
( 100) 350.28 Tj
5548 633 m
5548 663 l
5548 3687 m
5548 3657 l
5887 633 m
5887 663 l
5887 3687 m
5887 3657 l
6128 633 m
6128 663 l
6128 3687 m
6128 3657 l
6314 633 m
6314 663 l
6314 3687 m
6314 3657 l
6467 633 m
6467 663 l
6467 3687 m
6467 3657 l
6596 633 m
6596 663 l
6596 3687 m
6596 3657 l
6707 633 m
6707 663 l
6707 3687 m
6707 3657 l
6806 633 m
6806 663 l
6806 3687 m
6806 3657 l
6894 633 m
6894 693 l
6894 3687 m
6894 3627 l
S
[1 0 0 1 0 0] Tm
0 0 Td
6668.82 376 Td
/F29_0 180 Tf
( 1000) 450.36 Tj
1116 633 5778 3054 re
S
q
[1 0 0 1 210 2160] cm
[0 1 -1 0 0 0] cm
[1 0 0 1 0 -46] cm
[1 0 0 1 0 0] Tm
0 0 Td
-170.01 0 Td
/F29_0 180 Tf
(time) 340.02 Tj
Q
[1 0 0 1 0 0] Tm
0 0 Td
3494.88 60 Td
/F29_0 180 Tf
(problem size) 1020.24 Tj
3404.79 3958 Td
(Benchmark leq) 1200.42 Tj
/DeviceRGB {} CS
[1 0 0] SC
/DeviceRGB {} cs
[1 0 0] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
5874.08 1386 Td
(swi) 259.92 Tj
/DeviceRGB {} CS
[1 0 0] SC
/DeviceRGB {} cs
[1 0 0] sc
6234 1432 m
6694 1432 l
1696 1697 m
2035 1887 l
2276 1901 l
2462 2036 l
2615 2154 l
2744 2230 l
2855 2302 l
2954 2346 l
3042 2421 l
3122 2478 l
3195 2553 l
3323 2651 l
3435 2736 l
3534 2825 l
3622 2898 l
3702 2949 l
3774 3018 l
3873 3098 l
3961 3149 l
4041 3219 l
4113 3285 l
4202 3337 l
4281 3408 l
4354 3474 l
4437 3523 l
4512 3591 l
S
/DeviceRGB {} CS
[0 0.752899 0] SC
/DeviceRGB {} cs
[0 0.752899 0] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
5844.02 1175 Td
/F29_0 180 Tf
(jchr) 289.98 Tj
/DeviceRGB {} CS
[0 0.752899 0] SC
/DeviceRGB {} cs
[0 0.752899 0] sc
6234 1221 m
6694 1221 l
1696 1938 m
2035 1978 l
2276 1973 l
2462 2008 l
2615 2087 l
2744 2152 l
2855 2167 l
2954 2222 l
3042 2268 l
3122 2305 l
3195 2348 l
3323 2429 l
3435 2493 l
3534 2555 l
3622 2646 l
3702 2747 l
3774 2894 l
3873 2938 l
3961 2982 l
4041 3088 l
4113 3168 l
4202 3199 l
4281 3262 l
4354 3320 l
4437 3340 l
4512 3375 l
4595 3415 l
4670 3451 l
4749 3450 l
4822 3508 l
4898 3545 l
S
/DeviceRGB {} CS
[0 0.501999 1] SC
/DeviceRGB {} cs
[0 0.501999 1] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
5793.98 964 Td
/F29_0 180 Tf
(cchr) 340.02 Tj
/DeviceRGB {} CS
[0 0.501999 1] SC
/DeviceRGB {} cs
[0 0.501999 1] sc
6234 1010 m
6694 1010 l
1696 1114 m
2035 1260 l
2276 1311 l
2462 1364 l
2615 1435 l
2744 1496 l
2855 1537 l
2954 1593 l
3042 1667 l
3122 1687 l
3195 1730 l
3323 1799 l
3435 1868 l
3534 1924 l
3622 1976 l
3702 2026 l
3774 2080 l
3873 2144 l
3961 2203 l
4041 2265 l
4113 2317 l
4202 2380 l
4281 2444 l
4354 2500 l
4437 2566 l
4512 2628 l
4595 2701 l
4670 2763 l
4749 2830 l
4822 2892 l
4898 2960 l
4976 3028 l
5055 3099 l
5127 3172 l
5200 3246 l
5273 3322 l
5345 3399 l
5422 3481 l
5496 3560 l
S
/DeviceRGB {} CS
[0.752899 0 1] SC
/DeviceRGB {} cs
[0.752899 0 1] sc
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
[1 0 0 1 0 0] Tm
0 0 Td
6044 753 Td
/F29_0 180 Tf
(c) 90 Tj
/DeviceRGB {} CS
[0.752899 0 1] SC
/DeviceRGB {} cs
[0.752899 0 1] sc
6234 799 m
6694 799 l
2035 956 m
2276 985 l
2462 1030 l
2615 1130 l
2744 1161 l
2855 1269 l
2954 1306 l
3042 1342 l
3122 1364 l
3195 1390 l
3323 1457 l
3435 1486 l
3534 1544 l
3622 1581 l
3702 1620 l
3774 1652 l
3873 1700 l
3961 1745 l
4041 1777 l
4113 1811 l
4202 1859 l
4281 1896 l
4354 1921 l
4437 1960 l
4512 2003 l
4595 2031 l
4670 2081 l
4749 2118 l
4822 2155 l
4898 2190 l
4976 2232 l
5055 2275 l
5127 2313 l
5200 2351 l
5273 2389 l
5345 2429 l
5422 2470 l
5496 2510 l
5568 2550 l
5643 2589 l
5718 2631 l
5793 2675 l
5867 2717 l
5941 2759 l
6013 2797 l
6087 2841 l
6160 2881 l
6226 2923 l
S
/DeviceRGB {} CS
[0 0 0] SC
/DeviceRGB {} cs
[0 0 0] sc
1116 633 5778 3054 re
S
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%EOF
